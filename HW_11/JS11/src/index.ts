
// Task 1.
// 1. Создайте проект командой npm init и введите свои данные
// 2. Установите в проект typescript в devDependencies, настройте tsconfing как показано в лекции
// 3. Создайте папки classes, types в папке src
// 4. Создайте интерфейс ICalculator (в соответствуюем файле в папке types) с методами add, subtract, divide и multiply
// 5. Создайте класс Calculator (в соответствуюем файле в папке classes), имплементирующий интерфейс ICalculator
// 6. Экспортируйте из файла калькулятор объект класса Calculator по дефолту
// 7. Установите mocha, chai и их тайпы в проект
// 8. Напишите юнит тесты на методы класса Calculator в разных файлах в папке test (смоуки)
// 9. Напишите скрипт для запуска юнит тестов вместе с компиляцией тайпскрипта
// 10. Добавьте папки node_modules и dist в .gitignore

// Task 2.
// Написать класс User, создающий юзера с параметрами name, surname, username, password
// Написать функцию createUser, возвращающую нового юзера класса User, если все данные, переданные в функцию соответствуют требованиям:
// name - 1-40 букв (латиница)
// surname - 1-100 букв (латиница) и символ дефис
// username - 1-50 букв (латиница), цифр, а также символы _ -
// password - 8-120 символов (из букв - только латница), минимум 1 буква в нижнем регистре, 1 буква в верхнем регистре, 1 цифра, 1 спецсимвол, 1 пробел
// Если хоть 1 проверка не пройдена - отображаем ошибку с полями, на которых упали проверки
// Покрыть юнит тестами функцию createUser, а также все другие используемые функции, если были созданы